package scaler.assigments.homework;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

public class Hashing_Homework_Q1 {

	public static void main(String args[]) {
		Integer[] arr = new Integer[] {-20951, -43884, 71127, -63791, -25477, 23343, -42940, 19176, -67149, 18482, 24722, -68534, 64965, 55432, -2412, -2296, -49613, -42447, 447, -13343, -54066, 9595, 46926, -41672, -585, -60555, 40171, -16219, 7036, 66138, 3811, 3131, 88113, -67447, 26935, -57201, -48420, 16081, 17701, 65017, 31018, 91468, -17030, 51821, 39410, -49519, -63344, -84450, -18150, -20107, -11322, -75320, -32514, 12544, 1617, 10952, -16566, 64486, -70712, 21759, -12177, 23877, -40509, 60831, -24872, -56131, 76853, -25846, -65144, -59685, 48595, 15769, -89723, -43247, -12933, 62818, -32956, 15912, -14822, 86313, -91748, -76441, 14463, 87666, -25140, 76596, -83243, -89276, -12949, 64671, 9099, -71796, -56438, 24407, 37474, 6836, 3316, 84622, 76408, 15167, -5962, -49783, -47085, -88787, 1073, 3145, 48946, -36419, 39969, -83582, 80744, -47651, 20972, -68293, 79959, -87869, 3755, -1981, 1360, 18827, 73368, 48496, 15047, 2151, -90605, -23905, -80284, 15004, -50865, -3883, 64978, -51284, 73512, -30784, 45990, 49989, 8867, 71696, -15875, 76472, -24796, -46077, 36562, -70267, -76274, -80038, -47625, -8894, -40534, -47010, 84415, 45368, -122, -50335, -91290, -11571, 83493, -76702, 38912, -65946, 1810, 5455, -77686, -5095, 2608, -38444, -77638, 57316, -67584, -14610, -41827, 50168, -33380, -17147, -9271, -12789, 61565, 15653, -43886, -83212, 48751, 31638, -43697, 32981, -9496, 24273, 85233, -64163, -35352, -16921, -35165, -67861, -26579, -79428, 78432, 49121, 9706, -6698, -67810, 78143, -47724, 7275, 83725, -68785, -45115, 19575, -56354, 13750, -3674, 51169, 21428, -61847, 6519, -57721, 80196, -6429, -80754, -75770, 90789, -27282, 2515, 37400, -62812, 14641, 14709, 67943, 48695, -52917, 74723, -16172, -69282, -71187, 67011, -30808, 76640, 3253, 53917, 61521, -7449, -35359, -45623, 88435, -38012, 38584, 1719, 89670, -90593, 4323, -6873, -40745, 1349, -91150, -73995, -27829, 46394, 1295, -11204, 79424, -42881, 51127, 24294, -4884, -46477, -65067, -57502, -60703, 64750, -20617, -1132, 45359, 52671, 70905, 22161, -71483, -54050, -31767, 12768, 67365, 76993, -71814, -61661, -37892, 23541, 32472, -80640, -72450, 89746, 22171, 89497, 62447, 18487, -76202, -74055, -55964, 76522, -61701, -25247, 81737, -69211, 76220, 5116, 76845, -60981, 18263, -62304, -78965, -10021, -10055, 16032, 21051, 76739, -86089, 56216, 45211, -12476, 82353, 48823, 4683, 88370, -6373, -56287, -80820, 9432, 31574, 65685, -12353, 71130, 86214, -69793, -12141, 79091, -42328, 59593, -71624, -86857, -7465, -89978, 19990, -3363, -29724, -7928, 44752, -76849, -55154, -66139, 34906, 12493, -53673, 44599, 74130, 29982, -54698, -50356, -15596, 8328, -20921, -91293, 69135, -66727, -69637, 39529, 58640, 8515, 85878, 66221, 52387, -47130, -697, 40379, -4132, -44737, 83374, -39823, 1307, -50686, 54037, -27211, 931, 67043, -60115, -62093, -43032, -89873, -3961, 34807, 25741, 54306, -7134, -24725, 52027, -68677, 77932, 90477, -73295, 43785, -42871, 29049, -62776, -30568, -5234, -28187, -38527, 55910, 66636, 85955, 89899, 55521, -89277, -59737, 21659, -36835, 52295, -40822, -35967, 34404, -58126, 28104, -35873, 64202, -9510, 67764, -77258, 54580, -65799, -48443, 10096, 36564, 47271, -57608, 47343, 7993, 2203, 7310, 9821, -22821, 65478, -91980, -19868, 51702, 62231, -54480, -980, -69995, 37256, -88014, 17734, -4931, -58836, 32540, 65473, 87380, 72498, -86929, -28300, -72636, 38437, -38011, 56080, -45748, -7821, -74779, -58363, -86281, 67443, -14950, 22561, 20242, 83280, -79262, -17778, -8060, 16950, -13604, 7304, 88932, 35886, -85906, -12546, 89142, 62030, -13405, -84416, -89197, -82725, -42043, -68258, -76706, -64878, -55136, -30536, 85723, 77886, 42319, -74441, -7078, 14545, 12959, 67179, -39845, -54739, -50130, 79724, -78712, 8850, 467, -51357, -76383, 51314, -52729, 51540, 81624, 90786, -13302, 45487, 24213, 91641, -40780, -41117, 30993, -28025, -13965, -36097, 73724, -22324, 81027, -26547, -58726, 56528, -7477, 17626, 66488, 82099, -61837, -64902, 46789, -84538, 87169, -77942, 24771, 4148, 17133, 28867, 12889, -16770, 17930, 46908, -72925, -3864, 24931, -86221, -74668, 42390, -33663, 59600, 12698, 32823, -86228, -40597, 16022, 14541, -19683, -25529, 70730, -8717, 57138, 23410, -23579, -42098, -62816, -56054, 68602, 20471, -73960, 11014, 88688, 60648, -14282, -42795, -75433, 37558, 86853, 48198, 19206, 375, 28306, 41473, 52205, -41462, -84815, -54614, 73394, 65276, -36743, -67221, 24928, 17883, 76820, 59692, 23459, 2430, 73502, -88407, 51191, 30538, -18501, 80246, -25674, -7358, 62605, -51294, -65666, 67228, 52727, 33698, -63533, -17792, 78545, -34106, 72328, -18334, -3006, 46149, 1810, -26462, 22778, -75973, -60897, 77889, 71786, -65846, -66653, -32805, 71572, -8826, -75797, 32471, -58029, -88942, -79009, 11877, -14864, 88391, 53208, 90557, -35048, -87064, 87826, -8282, 78903, -3936, -19796, -64441, -5002, 40295, -76083, -30691, -50693, 62212, 45424, -80788, -64361, 60778, -61679, -53109, -51041, 26153, -90493, -72359, 24251, -38326, -87452, 76445, 82838, -28072, 21721, -13963, 52877, 55138, -49360, 88303, 77163, -92390, -49904, -33200, 64588, -70377, -80907, -33092, -5794, 61652, -2049, 91744, 41157, 52119, 81244, -65753, 36399, -2028, -56893, 71799, 79908, -76504, 50156, -73117, -34261, -76628, -4993, 18822, -2813, 28185, 70444, -12887, -67947, -6051, -6887, -37447, 72068, -42914, -33802, 1538, -80580, -69838, 107, -85753, 16914, 47439, 40963, -76919, 74837, -53475, 28610, 70268, 21955, -54890, -45504, 3579, 64069, -23210, 5828, 36950, -46472, 87588, 23158, -39736, -56253, -53726, -21797, -18391, 73775, -79743, 34904, 34859, 14411, 11111, -36128, -65326, 35739, -34131, 4342, -43081, -63765, 6868, 36779, -66912, 65925, 66333, -76903, 28280, 22650, 81668, 49205, 7869, -65503, 74027, 62686, 56156, -72183, -20651, -65477, -29186, -41009, -48755, -18949, 67250, -74631, -43288, 40142, 13151, -14039, 33247, -74548, 81962, 9533, 29569, 25160, -35507, -66389, 76533, -24069, -27050, -60739, 92228, -22226, -43633, -34237, -67521, -37330, 49589, 3673, -23868, -57559, -56469, -15849, 26292, 46001, -10710, -23823, 50800, 34508, 77444, 16668, 40629, 39683, 43124, 47618, -85456, 10485, -27479, 69835, -16473, 77745, -57610, -70990, -12268, 26939, 83674, -13025, 45923, -46614, 18697, -74700, -16042, 29233, 44649, 41581, 11888, 22539, 19643, 36965, 13428, -35235, -13509, -4618, 51009, -79756, -32193, 42205, -63090, 8761, -91749, 90935, 63690, -16340, -54026, -13969, -27307, -87077, -44513, 32189, 8775, -12229, 3437, 39890, -29974, -82808, 33235, -60076, -70375, -37735, -14832, -7668, 60015, 45353, 85883, -48026, -73477, 65104, 24238, 77346, -6900, 6317, 15900, 75725, 51470, -87424, -17041, 9975, 78268, -39407, -72408, 11820, 2275, -21491, -52642, 14710, -64994, -62437, 55401, 58791, -4393, -46644, 17952, 42216, -71123, 58789, 63700, -5538, -72876, -72091, -58033, 81884, -30099, -86705, -22197, 39425, -30940, 13044, -39893, -48703, 16730, 50263, 85301, -79771, -14495, -75493, -85794, 36125, -2998, 50694, 29812, -43314, 89501, -37839, 9949, -5423, -27127, 18316, 42161, -59126, -6606, 19644, -35526, -32316, 28260, -10029, -81741, -37152, -7230, -76217, -39264, -91914, 40638, -12438, 63927, -92045, -38416, -50359, 66192, 90381, 40341, -47875, 73324, -17743, -58805, 10790, -867, 20198, 31495, -52786, 19877, 49597, 3197, 47740, -1859, -27439, -3213, -91199, -13816, 5329, 66815, 38701, 50300, -39523, -40541, 52403, 58195, -19921, 42540, -70878, -51848, 48243, 75064, 62366, 83629, -80087, -1691, 69955, 78068, 72510, -69097, 86175, -90234, -90263, -6520, 4547, 51489, 69200, 51528, -27811, 40, 70445, 58629, 69269, -59926, 11041, -33411, -64476, -84243, 63108, -81301, -41997, 48172, -85728, 53413, -21913, 29903, -47340, 18403, 15121, -65501, 45075, 58155, 56698, 28192, 23865, -71993, 13938, 46110, 38901, 62073, -80746, 50373, 51442, 53711, 60954, 43812, 45969, -22590, 86114, 14112, 9872, 79989, 7199, -23588, 18156, 31980, -85680, 66417, 45584, -20118, 5622, -78438, 18360, -5887, 42507, -8510, -59581, 56854, 44420, 5969, -11466, -38045, -52042, -76841, -58683, 20659, 33484, 47143, -85473, 68527, -92497, 19294, -33608, -6442, 9618, -80962, 17111, -59206, 61143, -64559, 36833, -31525, -45464, 37905, -67844, -46185, 54091, 76314, 50045, -42668, 10015, 88623, 82403, 62241, -46306, -40873, 5407, -78062, -25163, -46667, 70100, -9782, -47673, -88818, -67606, 22380, 47297, -2071, -71086, 44307, 58600, 75292, -72058, 46458, 44148, 31753, -62306, 20547, -78603, -91876, -71469, -73028, 88388, -13227, 10814, -25280, -34495, -44517, -5677, -76370, -43120, -17846, -55513, 32448, -35860, -51285, 41594, -81034, -89582, 11403, 10998, -66579, -40462, 15401, 15374, -90506, 85126, -28707, -20389, 58108, -70320, 24365, 50901, 87947, -82116, -70381, -56633, -46215, -3467, 22734, 71787, -65323, -21881, 5287, -81580, 53744, -30118, 70096, 37111, 63047, -652, 49006, 18292, -31277, -85583, -77966, 79501, 78424, -34209, -14748, 8884, 63613, -78248, 89934, 43910, 27808, -16859, -75024, -45874, 69706, 34359, -54463, -64371, -30769, 60385, 1609, -78707, 17582, 48297, 37402, 84070, 59339, 60702, -25694, -86679, -28674, -19935, 2548, -36283, 18805, 31233, 24079, 41666, -21587, -47216, -11160, 50056, -89764, 70270, -83922, -47683, 47849, 63150, 77369, 79453, 49375, -75904, 85913, -36980, -26348, 80880, 28567, -85960, -82926, 31441, 15372, 12787, 48540, -50973, -73959, 89702, -31142, -3577, -83385, -72157, -87393, -4783, -37743, -10735, -30257, 58003, 51985, 70654, -19044, -89393, 74763, 78629, 66147, -50407, -40997, 1090, -73063, -59638, 56529, -77291, 54282, -32284, 66340, -27426, 4974, 71721, 92043, 73740, -45198, 14584, 10813, 16383, -14384, -82146, 19482, 69154, -54137, -36869, -70162, 47605, 83277, 29557, 87611, 88299, 68842, 9349, -10000, 66896, 39064, -72072, 66596, -64043, 25123, -74185, 88947, -55131, 23458, -78861, 70129, 8137, 1753, -41016, 64427, 90248, 77810, -72724, 5789, 56265, -23822, 37194, 62043, -88294, 35522, -44006, -68927, -54378, -83499, -57115, -38567, -90000, -32086, 79646, -80938, 68487, -61327, -52189, 85461, 79236, -19642, -21699, -36600, 83743, -46, 72382, 3335, 11644, 75120, -55727, -86962, 52312, -45183, -91933, 41847, 61990, 29268, -90577, 27497, -16132, -38317, -78858, 88046, 45916, -20479, -40874, 41835, 76167, -76022, -9099, 58491, 15288, -58591, -89452, -3669, -25282, -19330, 38284, 76840, 52540, -41660, 35707, 50227, -8946, 20242, -80471, 43016, -59087, -82718, 26245, 90556, -86626, 12998, 75640, 69770, -799, 68743, -83816, 63340, 62070, 83015, 25450, -70188, 30609, 22743, -65798, 43612, 33562, -30978, -21235, 47196, 25220, 18091, -80412, 62815, -65033, -28243, 73017, -77095, -8674, 6832, -74371, -68027, -33527, -17616, -85689, 18738, -90641, -6875, 87894, 84053, 11200, 6997, 47929, -59438, 90405, 70824, -45339, 34040, -90059, 1595, 31098, 82911, -14172, -43469, 601, 80976, -63054, -60322, 62014, 30527, 69767, -79272, 27473, -91192, -75663, -1280, 30036, -17573, 10107, -86520, 71004, -8536, 19521, 19608, 85807, 86636, 83381, 84086, 36111, -80258, 41631, 32015, -33791, 35863, -87869, 19567, 19931, 45805, 51899, 34326, 36397, 31241, 10811, 14751, 52288, 46781, 24224, -74384, 38410, 51922, -891, 65626, -20593, -74884, -40188, 20447, -42095, -40730, -86921, 49520, 60543, -88773, 78561, 70357, 81174, -78759, -88905, -2780, -81897, -82629, -52993, -61984, -67033, -16347, 85745, 28157, 60927, -13613, -13679, 7348, -21897, 26949, 14558, 40493, 51566, 7789, -87956, -18792, 62697, -29320, -75808, -90817, 62120, 4730, -59706, 85868, 92070, -73044, -76198, 29202, -23786, -54884, 28053, 61707, -23833, -69538, -40937, -35417, -51394, 89455, 50628, -5126};
		ArrayList<Integer> A = new ArrayList<Integer>(Arrays.asList(arr));
		new Hashing_Homework_Q1().solve(A);//331
	}

	public int solve(ArrayList<Integer> A) {
		   int prefsum=0;
	        int count=0;
	        HashMap<Integer,Integer> map=new HashMap<Integer,Integer>();
	        map.put(0,1);  //cases when the prefix sum itself becomes zero
	        for(int i=0;i<A.size();i++){
	            prefsum+=A.get(i);
	            if(map.containsKey(prefsum)){
	                count+=map.get(prefsum);
	                map.put(prefsum,map.get(prefsum)+1);  
	            }        
	            else
	                map.put(prefsum,1);
	        }return count%1000000007;      

	}
}